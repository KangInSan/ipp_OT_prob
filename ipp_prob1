#include <iostream>
#include <string>
#include <fstream>
using namespace std;

int cntWord(string s, int i, bool flag);	//단어들 별 횟수를 세기위한 함수입니다.

struct word					//단어들을 저장할 구조체입니다.
{
	string info;
	int cnt;
};
struct word stWord[10000];	//필요에따라 조정되겠습니다만은 여기서는 1만개로 정했습니다.

int main(void)
{
	ifstream ifst;					//txt파일을 읽어오기 위한 변수입니다.	
	string st;						//읽어온 단어를 임시 저장할 string변수입니다.
	int iArrNum = 0;				//구조체배열 번호를 위한 변수입니다.

	ifst.open("news.txt");			//txt파일을 읽어옵니다.
	ifst >> st;						//ifst >> 는 일반적인 cin >> 과 같은 역할을 합니다. 공백, 개행문자로 입력이 끊깁니다.
	stWord[iArrNum].info = st;		//첫 시작 단어는 겹치는것이 없으므로 0번에 우선저장합니다.
	stWord[iArrNum].cnt = 1;		//한번나왔으므로 1
	iArrNum = 1;					//다음 배열번호는 1번입니다.
	while (ifst.eof() == false)		//만약 eof(파일의 끝)이면 true가 나와서 반복문을 종료합니다.
	{
		bool bSameFlag = false;		//같은 단어인지 판단하기 위한 flag입니다.
		ifst >> st;					//한 단어를 입력받습니다.
		iArrNum = cntWord(st, iArrNum, bSameFlag);	//입력받은 단어를 판단해 기존단어의 카운터를 증가시킬지 새로 추가할지 결정하는 함수입니다.
	}
	for (int i = 0; i < iArrNum; i++)
	{
		cout << stWord[i].info << " : " << stWord[i].cnt << ", " << endl;	//양식에 맞게 출력합니다.
	}
}

int cntWord(string s, int n, bool flag)
{
	for (int i = 0; i < n; i++)
	{
		if (s.compare(stWord[i].info) == 0)	//비교함수입니다. 입력받은 문자열(s)와 기존 문자열(stWord[i].info)이 같다면 0이 리턴됩니다.
		{
			stWord[i].cnt++;				//같을경우 기존문자열의 카운터값을 1증가시켜줍니다.
			flag = true;					//같았으므로 flag를 true로 바꿔줍니다.
		}
	}
	if (!flag)								//끝까지 같은게 없었을 경우
	{
		stWord[n].info = s;					//문자열을 추가해주고 
		stWord[n].cnt++;					//한번나왔으므로 1증가시켜줍니다.
		n++;								//배열번호를 1증가시킵니다.
	}
	return n;								//배열번호를 리턴합니다.
											//같은 문자가 있었을경우 위 조건문은 들어가지 않고 배열번호는 증가하지 않은채 리턴됩니다.
}
